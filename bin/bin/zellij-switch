#!/usr/bin/env bash

# Required dependencies:
#   macOS
#   https://zellij.dev/
#   https://github.com/ajeetdsouza/zoxide

# Show help menu
if [ "$1" = "-h" ] || [ "$1" == "--help" ]; then
	printf "\n"
	printf "\033[1m  zellij switch - create or switch between zellij sessions \033[0m\n"
	printf "\n"
	printf "\033[32m  Run interactive mode (prompt zellij sessions or zoxide results)\n"
	printf "\033[34m      zellij-switch\n"
	printf "\n"
	printf "\033[32m  Go to session (matches zellij session, zoxide result, or path)\n"
	printf "\033[34m      zellij-switch {name}\n"
	printf "\n"
	printf "\033[32m  Show help\n"
	printf "\033[34m      zellij-switch -h\n"
	printf "\033[34m      zellij-switch --help\n"
	printf "\n"
	printf "\033[32m  Inspired by\n"
	printf "\033[37m      https://github.com/joshmedeski/t-smart-tmux-session-manager\n"
	printf "\n"
	exit 0
fi

HEADER="Current zellij sessions and zoxide entries"
PROMPT="Pick > "

# Check if already in a Zellij session
if [[ ! -z "$ZELLIJ" ]]; then
	# Detach from Zellij if already inside it
	osascript <<EOF
  tell application "System Events"
      keystroke "o" using control down -- control-o
      keystroke "d" -- d
      keystroke "zellij-switch"
      keystroke return
  end tell
EOF
	exit 0
fi

# Handle input arguments or interactive selection
if [[ $# -eq 1 ]]; then
	# Use the provided argument as the selected session or path
	selected=$1
else
	# Prompt user to select from Zellij sessions or Zoxide entries
	selected=$(
		(
			zellij list-sessions 2>/dev/null || true
			zoxide query -l
		) | fzf \
			--reverse \
			--header "$HEADER" \
			--prompt "$PROMPT"
	)
fi

# Exit if no selection was made
if [[ -z $selected ]]; then
	exit 0
fi

# Extract the session name or directory basename
selected_name=$(basename "$selected" | tr . _)

# Attach to existing Zellij session or create a new one
zellij attach -c "$selected_name"
